[package]
name = "gpt_core"
version.workspace = true
authors.workspace = true
description = "chatGPT UI's core crate. Offer the basic functionalities and mock server for chatGPT UI."
license.workspace = true
edition.workspace = true
repository.workspace = true
documentation = "https://docs.rs/gpt_core"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
# serde
serde = { workspace = true }
serde_json = { workspace = true }
# error
snafu = { workspace = true }
# tool
uuid = { version = "1.10.0", features = ["v7", "serde"] }
dirs = "5.0.1"
sanitize-filename = "0.5.0"
# net
reqwest = { version = "0.12.7", features = ["json", "stream"] }
url = { version = "2.5.2", features = ["serde"] }
# async
futures-util = "0.3.30"

[target.'cfg(target_os = "macos")'.dependencies]
keyring = { version = "3.0.5", features = ["apple-native"] }

[target.'cfg(target_os = "ios")'.dependencies]
keyring = { version = "3.0.5", features = ["apple-native"] }

[target.'cfg(target_os = "linux")'.dependencies]
keyring = { version = "3.0.5", features = ["linux-native"] }

[target.'cfg(target_os = "freebsd")'.dependencies]
keyring = { version = "3.0.5", features = ["linux-native"] }

[target.'cfg(target_os = "openbsd")'.dependencies]
keyring = { version = "3.0.5", features = ["linux-native"] }

[target.'cfg(target_os = "windows")'.dependencies]
keyring = { version = "3.0.5", features = ["windows-native"] }

[dev-dependencies]
tokio = { version = "1.38", features = ["macros"] }

[build-dependencies]
rustc_version = "0.4.0"

[features]
default = []
mock = []
